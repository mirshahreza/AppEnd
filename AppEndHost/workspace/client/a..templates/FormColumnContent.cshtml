@using AppEndServer
@using AppEndDbIO
@using AppEndCommon
@using System.Linq.Expressions
@using Newtonsoft
@using Newtonsoft.Json
@using RazorEngine.Text
@{
	string columnName = Model.Parameters["ColumnName"].ToStringEmpty();
	string submitApi = Model.Parameters["SubmitApi"].ToStringEmpty();
	if (columnName == "") return;
	DbColumn col = Model.DbDialog.GetColumn(columnName);

	string widgetOptionsRaw = col is not null && col.UiProps is not null && col.UiProps.UiWidgetOptions is not null ? col.UiProps.UiWidgetOptions.Replace("\n", "").Replace("\r", "") : "{}";
	string widgetOptions = widgetOptionsRaw != "{}" ? @"data-ae-widget-options='" + widgetOptionsRaw + @"'" : "";

	string vColIsRequired = "";
	string vColRule = "";
	Tuple<int, int> tupleMinMax = new Tuple<int, int>(1, 100);
	if (col is not null && col.UiProps is not null)
	{
		if (col.UiProps.Required is not null)
		{
			vColIsRequired = col.UiProps.Required.ToString().ToLower() == "true" ? "true" : "false";
		}
		vColRule = col.UiProps.ValidationRule.ToStringEmpty();
		if (vColRule != "")
		{
			tupleMinMax = col.UiProps.ValidationRule.ToRangeMinValue();
		}
	}


	string widget = col.UiProps != null ? col.UiProps.UiWidget.ToStringEmpty() : "";
	string disabledAttr = submitApi=="" || Model.DbDialog.QueryContainsColumn(submitApi, columnName) ? "" : "disabled";

}

@if (widget == "Checkbox")
{
	@if (vColIsRequired == "false")
	{
		<div class="form-control mt-2 pointer text-nowrap @disabledAttr" data-ae-widget="nullableCheckbox" @(new RawString(widgetOptions))>
			<i class="fa-solid fa-fw me-1"></i> <span>{{shared.translate('@col.Name')}}</span>
			<input type="hidden" v-model="row.@col.Name" @disabledAttr />
		</div>
	}
	else
	{
		<div class="form-control mt-2 pointer text-nowrap data-ae-validation @disabledAttr" data-ae-widget="nullableCheckbox" @(new RawString(widgetOptions))>
			<i class="fa-solid fa-fw me-1"></i> <span>{{shared.translate('@col.Name')}}</span>
			<input type="hidden" v-model="row.@col.Name" data-ae-validation-required="@vColIsRequired" @disabledAttr />
		</div>
	}
}
else if (col.Fk is not null && col.UiProps is not null && widget == "Combo")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	<select class="form-select form-select-sm" v-model="row.@col.Name" data-ae-validation-required="@vColIsRequired" @disabledAttr>
		@if (col.AllowNull == true)
		{
			<option value="">-</option>
		}
		@if (col.Fk.JsLookupParentId is not null && col.Fk.JsLookupParentId!="")
		{
			<option v-for="i in shared.enum(@col.Fk.JsLookupParentId)" :value="i['@Model.DbDialog.GetTargetPkColumn(col)']">@Model.GetDisplayColumns(col)</option>
		}
		else
		{
			<option v-for="i in shared.getResponseObjectById(initialRequests, initialResponses, row, '@(col.Name)_Lookup')" :value="i['@Model.DbDialog.GetTargetPkColumn(col)']">@Model.GetDisplayColumns(col)</option>
		}
	</select>
}
else if (widget == "Radio")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	@if (col.Fk is not null && col.UiProps is not null)
	{
		<div class="form-control form-control-sm pt-2" data-ae-validation-required="@vColIsRequired" data-ae-validation-rule=":=i(1)">
			@if (col.AllowNull == true)
			{
				<div class="form-check form-check-inline">
					<input class="form-check-input" type="radio" name="@col.Name" id="@(col.Name+"__0")" v-model="row.@col.Name" value="" @disabledAttr />
					<label class="form-check-label" for="@(col.Name+"__0")">-</label>
				</div>
			}
			@if (col.Fk.JsLookupParentId is not null && col.Fk.JsLookupParentId != "")
			{
				<div class="form-check form-check-inline" v-for="(i,j) in shared.enum(@col.Fk.JsLookupParentId)">
					<input class="form-check-input" type="radio" name="@col.Name" :id="'@(col.Name+"_")'+j" v-model="row.@col.Name" :value="i['@Model.DbDialog.GetTargetPkColumn(col)']" @disabledAttr />
					<label class="form-check-label" :for="'@(col.Name+"_")'+j">@Model.GetDisplayColumns(col)</label>
				</div>
			}
			else
			{
				<div class="form-check form-check-inline" v-for="(i,j) in shared.getResponseObjectById(initialRequests, initialResponses, row, '@(col.Name)_Lookup')">
					<input class="form-check-input" type="radio" name="@col.Name" :id="'@(col.Name+"_")'+j" v-model="row.@col.Name" :value="i['@Model.DbDialog.GetTargetPkColumn(col)']" @disabledAttr />
					<label class="form-check-label" :for="'@(col.Name+"_")'+j">@Model.GetDisplayColumns(col)</label>
				</div>
			}
		</div>
	}
	else
	{
		<div class="form-control form-control-sm pb-0" data-ae-validation-required="false">
			@if (col.DbType.ToLower() == "bit")
			{
				@if (col.AllowNull == true)
				{
					<div class="form-check form-check-inline my-0 py-0">
						<input class="form-check-input" type="radio" name="@(col.Name+"_Form")" :id="'@(col.Name+"_Form_null")'" v-model="row.@col.Name" value="null" />
						<label class="form-check-label" :for="'@(col.Name+"_Form_null")'">Null</label>
					</div>
				}

				<div class="form-check form-check-inline my-0 py-0">
					<input class="form-check-input" type="radio" name="@(col.Name+"_Form")" :id="'@(col.Name+"_Form_false")'" v-model="row.@col.Name" value="false" />
					<label class="form-check-label" :for="'@(col.Name+"_Form_false")'">False</label>
				</div>
				<div class="form-check form-check-inline my-0 py-0">
					<input class="form-check-input" type="radio" name="@(col.Name+"_Form")" :id="'@(col.Name+"_Form_true")'" v-model="row.@col.Name" value="true" />
					<label class="form-check-label" :for="'@(col.Name+"_Form_true")'">True</label>
				</div>
			}
		</div>
	}
}
else if (col.Fk is not null && col.UiProps is not null && widget == "ObjectPicker")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	<div class="form-control form-control-sm py-0 data-ae-validation @disabledAttr">
		<div class="input-group input-group-sm p-0 pt-1" data-ae-widget="objectPicker">
			<input type="hidden" v-model="row.@col.Name" data-ae-validation-required="@vColIsRequired">
			@foreach (DbColumn dbC in Model.GetDisplayDbColumns(col))
			{
				<input type="hidden" v-model="row.@(col.Name+"_"+dbC.Name)">
			}
			<input type="text" class="form-control bg-transparent p-0 m-0 border-0" :value="shared.fixNull(@Model.GetDisplayColumnsAsVueTitle(col),'',true)" :placeholder="shared.translate('@col.Name')" disabled>
			<span>&nbsp;</span>
			<button class="btn btn-sm btn-outline-secondary bg-transparent p-0 m-0 me-1 border-0 text-hover-primary ae-objectpicker-search" type="button" @click="openPicker({colName:'@col.Name'})">
				<i class="fa-solid fa-hand-pointer"></i>
			</button>
			<button class="btn btn-sm btn-outline-secondary bg-transparent p-0 m-0 ms-1 border-0 text-hover-danger ae-objectpicker-clear" type="button">
				<i class="fa-solid fa-times"></i>
			</button>
		</div>
	</div>
}
else if (col.DbType.ToLower() == "image" && widget == "ImageView")
{
	<table class="w-100">
		<tbody>
			<tr>
				<td></td>
				<td style="width:100px;" class="py-3">
					<div style="height:100px;width:100px;">
						<div data-ae-widget="aeFileField" data-ae-widget-options='{"accept":"image/x-png,image/gif,image/jpeg","resize":true,"resizeMaxWidth":950,"resizeMaxHeight":950,"maxSize":800000}' class="ae-file-field w-100 h-100 border border-2 rounded-circle pointer data-ae-validation @disabledAttr">
							<input type="hidden" class="FileBody" v-model="row['@col.Name']" data-ae-validation-required="@vColIsRequired" />
							<input type="hidden" class="FileName" v-model="row['@col.Name.Replace("_FileBody","_FileName")']" />
							<input type="hidden" class="FileSize" v-model="row['@col.Name.Replace("_FileBody","_FileSize")']" />
							<input type="hidden" class="FileMime" v-model="row['@col.Name.Replace("_FileBody","_FileMime")']" />
						</div>
					</div>
				</td>
				<td></td>
			</tr>
		</tbody>
	</table>
}
else if (col.DbType.ToLower() == "image" && widget == "FileView")
{
	<table class="w-100">
		<tbody>
			<tr>
				<td></td>
				<td style="width:100px;" class="py-3">
					<div style="height:100px;width:100px;">
						<div data-ae-widget="aeFileField" @(new RawString(widgetOptions)) class="ae-file-field w-100 h-100 border border-2 rounded-circle pointer data-ae-validation @disabledAttr">
							<input type="hidden" class="FileBody" v-model="row.@col.Name" data-ae-validation-required="@vColIsRequired" @disabledAttr />
							<input type="hidden" class="FileName" v-model="row['@col.Name.Replace("_FileBody","_FileName")']" @disabledAttr />
							<input type="hidden" class="FileSize" v-model="row['@col.Name.Replace("_FileBody","_FileSize")']" @disabledAttr />
							<input type="hidden" class="FileMime" v-model="row['@col.Name.Replace("_FileBody","_FileMime")']" @disabledAttr />
						</div>
					</div>
				</td>
				<td></td>
			</tr>
		</tbody>
	</table>
}
else if (widget == "MultilineTextbox")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	<textarea @disabledAttr type="text" class="form-control form-control-sm @disabledAttr" id="input_@col.Name" v-model="row.@col.Name" data-ae-validation-required="@vColIsRequired" data-ae-validation-rule="@vColRule"></textarea>
}
else if (widget == "Htmlbox")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	@if (@disabledAttr=="disabled")
	{
		<div class="border border-2 rounded-2 p-2">
			<div v-html="row.@col.Name"></div>
		</div>
	}
	else
	{
		<div class="border border-2 rounded-2 data-ae-validation @disabledAttr">
			<textarea @disabledAttr type="text" v-model="row.@col.Name" data-ae-widget="trumbowyg" @(new RawString(widgetOptions)) style="display:none" data-ae-validation-required="@vColIsRequired" data-ae-validation-rule="@vColRule" id="input_@col.Name"></textarea>
		</div>
	}
}
else if (widget == "CodeEditorbox")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}} [{{shared.getEditorName('@widgetOptionsRaw')}}]</label>
	<div class="border border-2 rounded-2 data-ae-validation @disabledAttr">
		<div class="code-editor-container" data-ae-widget="editorBox" @(new RawString(widgetOptions)) id="ace_@col.Name" style="height:150px;"></div>
		<input @disabledAttr type="hidden" v-model="row.@col.Name" data-ae-validation-required="@vColIsRequired" data-ae-validation-rule="@vColRule" />
	</div>
}
else if (widget == "ColorPicker")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	<div class="input-group input-group-sm border-0">
		<span class="form-control form-control-sm bg-transparent">{{row.@col.Name}}</span>
		<input type="color" class="input-group-text p-3" :style="'background-color:'+row.@col.Name" id="input_@col.Name" v-model="row.@col.Name" data-ae-validation-required="@vColIsRequired" data-ae-validation-rule="@vColRule" @disabledAttr />
	</div>
}
else if (widget == "Sliderbox")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	<div class="input-group input-group-sm border-0">
		<span class="input-group-text" style="min-width:100px;">{{row.@col.Name}}</span>
		<input type="range" class="form-control form-control-sm" min="@tupleMinMax.Item1" max="@tupleMinMax.Item2" id="input_@col.Name" v-model="row.@col.Name" data-ae-validation-required="@vColIsRequired" data-ae-validation-rule="@vColRule" @disabledAttr />
	</div>
}
else if (widget == "DateTimePicker")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	<div class="input-group input-group-sm">
		<button class="btn btn-sm btn-outline-secondary" id="dp_@col.Name" data-ae-widget="dtPicker" data-ae-widget-options='{"targetTextSelector":"#dpText_@col.Name","targetDateSelector":"#dpDate_@col.Name","enableTimePicker":true,"dateFormat":"yyyy-MM-dd hh:mm tt","textFormat":"yyyy-MM-dd hh:mm tt"}' @disabledAttr>
			<i class="fa-solid fa-fw fa-calendar"></i>
		</button>
		<input class="form-control form-control-sm text-center" style="direction:ltr" id="dpText_@col.Name" disabled />
		<input class="form-control form-control-sm" id="dpDate_@col.Name" type="hidden" v-model="row.@col.Name" />
	</div>
}
else if (widget == "DatePicker")
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	<div class="input-group input-group-sm">
		<button class="btn btn-sm btn-outline-secondary" id="dp_@col.Name" data-ae-widget="dtPicker" data-ae-widget-options='{"targetTextSelector":"#dpText_@col.Name","targetDateSelector":"#dpDate_@col.Name","dateFormat":"yyyy-MM-dd","textFormat":"yyyy-MM-dd"}' @disabledAttr>
			<i class="fa-solid fa-fw fa-calendar"></i>
		</button>
		<input class="form-control form-control-sm text-center" style="direction:ltr" id="dpText_@col.Name" disabled />
		<input class="form-control form-control-sm" id="dpDate_@col.Name" type="hidden" v-model="row.@col.Name" />
	</div>
}
else
{
	<label class="fs-d8 text-muted ms-2" for="input_@col.Name">{{shared.translate('@col.Name')}}</label>
	<input @disabledAttr type="text" class="form-control form-control-sm" id="input_@col.Name" v-model="row.@col.Name" data-ae-validation-required="@vColIsRequired" data-ae-validation-rule="@vColRule" />
}